// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.20.1
// source: index.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WatchType int32

const (
	WatchType_WATCH_TYPE_PUT         WatchType = 0
	WatchType_WATCH_TYPE_DELETE      WatchType = 1
	WatchType_WATCH_TYPE_EXPIRE      WatchType = 2
	WatchType_WATCH_TYPE_MOVE_EXPIRE WatchType = 3
	WatchType_WATCH_TYPE_ADD_EXPIRE  WatchType = 4
)

// Enum value maps for WatchType.
var (
	WatchType_name = map[int32]string{
		0: "WATCH_TYPE_PUT",
		1: "WATCH_TYPE_DELETE",
		2: "WATCH_TYPE_EXPIRE",
		3: "WATCH_TYPE_MOVE_EXPIRE",
		4: "WATCH_TYPE_ADD_EXPIRE",
	}
	WatchType_value = map[string]int32{
		"WATCH_TYPE_PUT":         0,
		"WATCH_TYPE_DELETE":      1,
		"WATCH_TYPE_EXPIRE":      2,
		"WATCH_TYPE_MOVE_EXPIRE": 3,
		"WATCH_TYPE_ADD_EXPIRE":  4,
	}
)

func (x WatchType) Enum() *WatchType {
	p := new(WatchType)
	*p = x
	return p
}

func (x WatchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WatchType) Descriptor() protoreflect.EnumDescriptor {
	return file_index_proto_enumTypes[0].Descriptor()
}

func (WatchType) Type() protoreflect.EnumType {
	return &file_index_proto_enumTypes[0]
}

func (x WatchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WatchType.Descriptor instead.
func (WatchType) EnumDescriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{0}
}

// 空数据
type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{0}
}

type ClientResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SecretKey string `protobuf:"bytes,2,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
}

func (x *ClientResponse) Reset() {
	*x = ClientResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientResponse) ProtoMessage() {}

func (x *ClientResponse) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientResponse.ProtoReflect.Descriptor instead.
func (*ClientResponse) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{1}
}

func (x *ClientResponse) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

// 获取数据的返回结构体
type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{2}
}

func (x *GetResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

// Keys 的返回结构体
type KeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []string `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *KeysResponse) Reset() {
	*x = KeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeysResponse) ProtoMessage() {}

func (x *KeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeysResponse.ProtoReflect.Descriptor instead.
func (*KeysResponse) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{3}
}

func (x *KeysResponse) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

// 获取数据的请求结构体
type KeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *KeyRequest) Reset() {
	*x = KeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyRequest) ProtoMessage() {}

func (x *KeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyRequest.ProtoReflect.Descriptor instead.
func (*KeyRequest) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{4}
}

func (x *KeyRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// 设置数据的请求结构体
type SetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Data   string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Expire int64  `protobuf:"varint,3,opt,name=expire,proto3" json:"expire,omitempty"`
}

func (x *SetRequest) Reset() {
	*x = SetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRequest) ProtoMessage() {}

func (x *SetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRequest.ProtoReflect.Descriptor instead.
func (*SetRequest) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{5}
}

func (x *SetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *SetRequest) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

// Expire 的请求结构体
type AddExpireRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Expire int64  `protobuf:"varint,2,opt,name=expire,proto3" json:"expire,omitempty"`
}

func (x *AddExpireRequest) Reset() {
	*x = AddExpireRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddExpireRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExpireRequest) ProtoMessage() {}

func (x *AddExpireRequest) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddExpireRequest.ProtoReflect.Descriptor instead.
func (*AddExpireRequest) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{6}
}

func (x *AddExpireRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AddExpireRequest) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

// MoveExpireRequest 的请求结构体
type MoveExpireRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *MoveExpireRequest) Reset() {
	*x = MoveExpireRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveExpireRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveExpireRequest) ProtoMessage() {}

func (x *MoveExpireRequest) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveExpireRequest.ProtoReflect.Descriptor instead.
func (*MoveExpireRequest) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{7}
}

func (x *MoveExpireRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Key 的变化返回结构体
type KeyChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string    `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Data string    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Type WatchType `protobuf:"varint,3,opt,name=type,proto3,enum=proto.WatchType" json:"type,omitempty"`
}

func (x *KeyChange) Reset() {
	*x = KeyChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_index_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyChange) ProtoMessage() {}

func (x *KeyChange) ProtoReflect() protoreflect.Message {
	mi := &file_index_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyChange.ProtoReflect.Descriptor instead.
func (*KeyChange) Descriptor() ([]byte, []int) {
	return file_index_proto_rawDescGZIP(), []int{8}
}

func (x *KeyChange) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyChange) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *KeyChange) GetType() WatchType {
	if x != nil {
		return x.Type
	}
	return WatchType_WATCH_TYPE_PUT
}

var File_index_proto protoreflect.FileDescriptor

var file_index_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2e, 0x0a,
	0x0e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x22, 0x21, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x22, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x1e, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x22, 0x4a, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x22, 0x3c, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x22, 0x25,
	0x0a, 0x11, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x57, 0x0a, 0x09, 0x4b, 0x65, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x2a, 0x84,
	0x01, 0x0a, 0x09, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e,
	0x57, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x55, 0x54, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x57, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44,
	0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x57, 0x41, 0x54, 0x43, 0x48,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x10, 0x02, 0x12, 0x1a,
	0x0a, 0x16, 0x57, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x4f, 0x56,
	0x45, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x41,
	0x54, 0x43, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x45, 0x58, 0x50,
	0x49, 0x52, 0x45, 0x10, 0x04, 0x32, 0x6f, 0x0a, 0x10, 0x43, 0x61, 0x64, 0x62, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x09, 0x4e, 0x65, 0x77,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x0b, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x86, 0x03, 0x0a, 0x0f, 0x43, 0x61, 0x64, 0x62, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x48, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12,
	0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x29, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x04, 0x4b,
	0x65, 0x79, 0x73, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x64, 0x64, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x34, 0x0a, 0x0a, 0x4d, 0x6f,
	0x76, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x2e, 0x0a, 0x05, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x30, 0x01,
	0x12, 0x2d, 0x0a, 0x0a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x11,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42,
	0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_index_proto_rawDescOnce sync.Once
	file_index_proto_rawDescData = file_index_proto_rawDesc
)

func file_index_proto_rawDescGZIP() []byte {
	file_index_proto_rawDescOnce.Do(func() {
		file_index_proto_rawDescData = protoimpl.X.CompressGZIP(file_index_proto_rawDescData)
	})
	return file_index_proto_rawDescData
}

var file_index_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_index_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_index_proto_goTypes = []interface{}{
	(WatchType)(0),            // 0: proto.WatchType
	(*Empty)(nil),             // 1: proto.Empty
	(*ClientResponse)(nil),    // 2: proto.ClientResponse
	(*GetResponse)(nil),       // 3: proto.GetResponse
	(*KeysResponse)(nil),      // 4: proto.KeysResponse
	(*KeyRequest)(nil),        // 5: proto.KeyRequest
	(*SetRequest)(nil),        // 6: proto.SetRequest
	(*AddExpireRequest)(nil),  // 7: proto.AddExpireRequest
	(*MoveExpireRequest)(nil), // 8: proto.MoveExpireRequest
	(*KeyChange)(nil),         // 9: proto.KeyChange
}
var file_index_proto_depIdxs = []int32{
	0,  // 0: proto.KeyChange.type:type_name -> proto.WatchType
	1,  // 1: proto.CadbClientHelper.NewClient:input_type -> proto.Empty
	1,  // 2: proto.CadbClientHelper.CloseClient:input_type -> proto.Empty
	5,  // 3: proto.CadbStoreHelper.Get:input_type -> proto.KeyRequest
	6,  // 4: proto.CadbStoreHelper.Set:input_type -> proto.SetRequest
	5,  // 5: proto.CadbStoreHelper.Delete:input_type -> proto.KeyRequest
	1,  // 6: proto.CadbStoreHelper.Keys:input_type -> proto.Empty
	7,  // 7: proto.CadbStoreHelper.AddExpire:input_type -> proto.AddExpireRequest
	8,  // 8: proto.CadbStoreHelper.MoveExpire:input_type -> proto.MoveExpireRequest
	5,  // 9: proto.CadbStoreHelper.Watch:input_type -> proto.KeyRequest
	5,  // 10: proto.CadbStoreHelper.CloseWatch:input_type -> proto.KeyRequest
	2,  // 11: proto.CadbClientHelper.NewClient:output_type -> proto.ClientResponse
	1,  // 12: proto.CadbClientHelper.CloseClient:output_type -> proto.Empty
	3,  // 13: proto.CadbStoreHelper.Get:output_type -> proto.GetResponse
	1,  // 14: proto.CadbStoreHelper.Set:output_type -> proto.Empty
	1,  // 15: proto.CadbStoreHelper.Delete:output_type -> proto.Empty
	4,  // 16: proto.CadbStoreHelper.Keys:output_type -> proto.KeysResponse
	1,  // 17: proto.CadbStoreHelper.AddExpire:output_type -> proto.Empty
	1,  // 18: proto.CadbStoreHelper.MoveExpire:output_type -> proto.Empty
	9,  // 19: proto.CadbStoreHelper.Watch:output_type -> proto.KeyChange
	1,  // 20: proto.CadbStoreHelper.CloseWatch:output_type -> proto.Empty
	11, // [11:21] is the sub-list for method output_type
	1,  // [1:11] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_index_proto_init() }
func file_index_proto_init() {
	if File_index_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_index_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddExpireRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveExpireRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_index_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_index_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_index_proto_goTypes,
		DependencyIndexes: file_index_proto_depIdxs,
		EnumInfos:         file_index_proto_enumTypes,
		MessageInfos:      file_index_proto_msgTypes,
	}.Build()
	File_index_proto = out.File
	file_index_proto_rawDesc = nil
	file_index_proto_goTypes = nil
	file_index_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CadbClientHelperClient is the client API for CadbClientHelper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CadbClientHelperClient interface {
	// 新建客户端
	NewClient(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ClientResponse, error)
	// 关闭客户端
	CloseClient(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type cadbClientHelperClient struct {
	cc grpc.ClientConnInterface
}

func NewCadbClientHelperClient(cc grpc.ClientConnInterface) CadbClientHelperClient {
	return &cadbClientHelperClient{cc}
}

func (c *cadbClientHelperClient) NewClient(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ClientResponse, error) {
	out := new(ClientResponse)
	err := c.cc.Invoke(ctx, "/proto.CadbClientHelper/NewClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cadbClientHelperClient) CloseClient(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.CadbClientHelper/CloseClient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CadbClientHelperServer is the server API for CadbClientHelper service.
type CadbClientHelperServer interface {
	// 新建客户端
	NewClient(context.Context, *Empty) (*ClientResponse, error)
	// 关闭客户端
	CloseClient(context.Context, *Empty) (*Empty, error)
}

// UnimplementedCadbClientHelperServer can be embedded to have forward compatible implementations.
type UnimplementedCadbClientHelperServer struct {
}

func (*UnimplementedCadbClientHelperServer) NewClient(context.Context, *Empty) (*ClientResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewClient not implemented")
}
func (*UnimplementedCadbClientHelperServer) CloseClient(context.Context, *Empty) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseClient not implemented")
}

func RegisterCadbClientHelperServer(s *grpc.Server, srv CadbClientHelperServer) {
	s.RegisterService(&_CadbClientHelper_serviceDesc, srv)
}

func _CadbClientHelper_NewClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CadbClientHelperServer).NewClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CadbClientHelper/NewClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CadbClientHelperServer).NewClient(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CadbClientHelper_CloseClient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CadbClientHelperServer).CloseClient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CadbClientHelper/CloseClient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CadbClientHelperServer).CloseClient(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _CadbClientHelper_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CadbClientHelper",
	HandlerType: (*CadbClientHelperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewClient",
			Handler:    _CadbClientHelper_NewClient_Handler,
		},
		{
			MethodName: "CloseClient",
			Handler:    _CadbClientHelper_CloseClient_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "index.proto",
}

// CadbStoreHelperClient is the client API for CadbStoreHelper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CadbStoreHelperClient interface {
	// 获取数据
	Get(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// 设置数据
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*Empty, error)
	// 删除数据
	Delete(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*Empty, error)
	// 获取 keys
	Keys(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*KeysResponse, error)
	// 设置key的过期时间
	AddExpire(ctx context.Context, in *AddExpireRequest, opts ...grpc.CallOption) (*Empty, error)
	// 移除 key的过期时间
	MoveExpire(ctx context.Context, in *MoveExpireRequest, opts ...grpc.CallOption) (*Empty, error)
	// 监听 key的变化
	Watch(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (CadbStoreHelper_WatchClient, error)
	// 关闭监听
	CloseWatch(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*Empty, error)
}

type cadbStoreHelperClient struct {
	cc grpc.ClientConnInterface
}

func NewCadbStoreHelperClient(cc grpc.ClientConnInterface) CadbStoreHelperClient {
	return &cadbStoreHelperClient{cc}
}

func (c *cadbStoreHelperClient) Get(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/proto.CadbStoreHelper/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cadbStoreHelperClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.CadbStoreHelper/Set", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cadbStoreHelperClient) Delete(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.CadbStoreHelper/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cadbStoreHelperClient) Keys(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*KeysResponse, error) {
	out := new(KeysResponse)
	err := c.cc.Invoke(ctx, "/proto.CadbStoreHelper/Keys", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cadbStoreHelperClient) AddExpire(ctx context.Context, in *AddExpireRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.CadbStoreHelper/AddExpire", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cadbStoreHelperClient) MoveExpire(ctx context.Context, in *MoveExpireRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.CadbStoreHelper/MoveExpire", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cadbStoreHelperClient) Watch(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (CadbStoreHelper_WatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CadbStoreHelper_serviceDesc.Streams[0], "/proto.CadbStoreHelper/Watch", opts...)
	if err != nil {
		return nil, err
	}
	x := &cadbStoreHelperWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CadbStoreHelper_WatchClient interface {
	Recv() (*KeyChange, error)
	grpc.ClientStream
}

type cadbStoreHelperWatchClient struct {
	grpc.ClientStream
}

func (x *cadbStoreHelperWatchClient) Recv() (*KeyChange, error) {
	m := new(KeyChange)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *cadbStoreHelperClient) CloseWatch(ctx context.Context, in *KeyRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.CadbStoreHelper/CloseWatch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CadbStoreHelperServer is the server API for CadbStoreHelper service.
type CadbStoreHelperServer interface {
	// 获取数据
	Get(context.Context, *KeyRequest) (*GetResponse, error)
	// 设置数据
	Set(context.Context, *SetRequest) (*Empty, error)
	// 删除数据
	Delete(context.Context, *KeyRequest) (*Empty, error)
	// 获取 keys
	Keys(context.Context, *Empty) (*KeysResponse, error)
	// 设置key的过期时间
	AddExpire(context.Context, *AddExpireRequest) (*Empty, error)
	// 移除 key的过期时间
	MoveExpire(context.Context, *MoveExpireRequest) (*Empty, error)
	// 监听 key的变化
	Watch(*KeyRequest, CadbStoreHelper_WatchServer) error
	// 关闭监听
	CloseWatch(context.Context, *KeyRequest) (*Empty, error)
}

// UnimplementedCadbStoreHelperServer can be embedded to have forward compatible implementations.
type UnimplementedCadbStoreHelperServer struct {
}

func (*UnimplementedCadbStoreHelperServer) Get(context.Context, *KeyRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedCadbStoreHelperServer) Set(context.Context, *SetRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Set not implemented")
}
func (*UnimplementedCadbStoreHelperServer) Delete(context.Context, *KeyRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedCadbStoreHelperServer) Keys(context.Context, *Empty) (*KeysResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Keys not implemented")
}
func (*UnimplementedCadbStoreHelperServer) AddExpire(context.Context, *AddExpireRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddExpire not implemented")
}
func (*UnimplementedCadbStoreHelperServer) MoveExpire(context.Context, *MoveExpireRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveExpire not implemented")
}
func (*UnimplementedCadbStoreHelperServer) Watch(*KeyRequest, CadbStoreHelper_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "method Watch not implemented")
}
func (*UnimplementedCadbStoreHelperServer) CloseWatch(context.Context, *KeyRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseWatch not implemented")
}

func RegisterCadbStoreHelperServer(s *grpc.Server, srv CadbStoreHelperServer) {
	s.RegisterService(&_CadbStoreHelper_serviceDesc, srv)
}

func _CadbStoreHelper_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CadbStoreHelperServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CadbStoreHelper/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CadbStoreHelperServer).Get(ctx, req.(*KeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CadbStoreHelper_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CadbStoreHelperServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CadbStoreHelper/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CadbStoreHelperServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CadbStoreHelper_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CadbStoreHelperServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CadbStoreHelper/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CadbStoreHelperServer).Delete(ctx, req.(*KeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CadbStoreHelper_Keys_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CadbStoreHelperServer).Keys(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CadbStoreHelper/Keys",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CadbStoreHelperServer).Keys(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CadbStoreHelper_AddExpire_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddExpireRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CadbStoreHelperServer).AddExpire(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CadbStoreHelper/AddExpire",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CadbStoreHelperServer).AddExpire(ctx, req.(*AddExpireRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CadbStoreHelper_MoveExpire_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveExpireRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CadbStoreHelperServer).MoveExpire(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CadbStoreHelper/MoveExpire",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CadbStoreHelperServer).MoveExpire(ctx, req.(*MoveExpireRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CadbStoreHelper_Watch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(KeyRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CadbStoreHelperServer).Watch(m, &cadbStoreHelperWatchServer{stream})
}

type CadbStoreHelper_WatchServer interface {
	Send(*KeyChange) error
	grpc.ServerStream
}

type cadbStoreHelperWatchServer struct {
	grpc.ServerStream
}

func (x *cadbStoreHelperWatchServer) Send(m *KeyChange) error {
	return x.ServerStream.SendMsg(m)
}

func _CadbStoreHelper_CloseWatch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CadbStoreHelperServer).CloseWatch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.CadbStoreHelper/CloseWatch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CadbStoreHelperServer).CloseWatch(ctx, req.(*KeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CadbStoreHelper_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.CadbStoreHelper",
	HandlerType: (*CadbStoreHelperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _CadbStoreHelper_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _CadbStoreHelper_Set_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _CadbStoreHelper_Delete_Handler,
		},
		{
			MethodName: "Keys",
			Handler:    _CadbStoreHelper_Keys_Handler,
		},
		{
			MethodName: "AddExpire",
			Handler:    _CadbStoreHelper_AddExpire_Handler,
		},
		{
			MethodName: "MoveExpire",
			Handler:    _CadbStoreHelper_MoveExpire_Handler,
		},
		{
			MethodName: "CloseWatch",
			Handler:    _CadbStoreHelper_CloseWatch_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Watch",
			Handler:       _CadbStoreHelper_Watch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "index.proto",
}
